<phone:PhoneApplicationPage
    x:Class="VoiceTimer.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:converter="clr-namespace:VoiceTimer.Converter"
    xmlns:c4f="clr-namespace:Coding4Fun.Toolkit.Controls;assembly=Coding4Fun.Toolkit.Controls"
    xmlns:vsm="clr-namespace:System.Windows;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:fwconv="clr-namespace:PhoneKit.Framework.Conversion;assembly=PhoneKit.Framework"
    xmlns:lc="clr-namespace:VoiceTimer.Controls"
    mc:Ignorable="d"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource ThemeForegroundLight}"
    SupportedOrientations="Portrait" Orientation="Portrait">
    
    <phone:PhoneApplicationPage.Resources>
        <!-- convertsers -->
        <converter:TimeSpanConverter x:Key="TimeSpanConverter" />
        <converter:DateToTimeConverter x:Key="DateToTimeConverter" />
        <fwconv:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        
        <!-- animations -->

        <Storyboard x:Name="ResetRotationAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="InactivePanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ActivePanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Name="ActivateAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="InactivePanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-90">
                	<EasingDoubleKeyFrame.EasingFunction>
                		<BackEase EasingMode="EaseIn"/>
                	</EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InactivePanel">
        		<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
        			<DiscreteObjectKeyFrame.Value>
        				<Visibility>Collapsed</Visibility>
        			</DiscreteObjectKeyFrame.Value>
        		</DiscreteObjectKeyFrame>
        	</ObjectAnimationUsingKeyFrames>
        	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActivePanel">
        		<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
        			<DiscreteObjectKeyFrame.Value>
        				<Visibility>Visible</Visibility>
        			</DiscreteObjectKeyFrame.Value>
        		</DiscreteObjectKeyFrame>
        	</ObjectAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ActivePanel">
        		<EasingDoubleKeyFrame KeyTime="0" Value="90"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="90"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
        			<EasingDoubleKeyFrame.EasingFunction>
        				<BackEase EasingMode="EaseOut"/>
        			</EasingDoubleKeyFrame.EasingFunction>
        		</EasingDoubleKeyFrame>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Name="DeactivateAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="InactivePanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-90"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InactivePanel">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActivePanel">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ActivePanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="90">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <ControlTemplate TargetType="c4f:TimeSpanPicker" x:Key="TimeSpanCustomStyle">
            <StackPanel>
                <ContentControl
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        Foreground="{StaticResource ThemeForegroundLight}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="12,0,12,-4"/>
                <Button FontSize="{TemplateBinding FontSize}" Background="Transparent"
                        x:Name="ValueButton"
                        Content="{TemplateBinding ValueString}"
                        BorderThickness="0"
                        FontFamily="{TemplateBinding FontFamily}"
                        Foreground="{StaticResource ThemeForegroundLight}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Style="{StaticResource NoAccentButton}">
                </Button>
            </StackPanel>
        </ControlTemplate>
        
        <Storyboard x:Name="AlarmBlinkingAnimation" AutoReverse="True" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ClockImage">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
        			<EasingDoubleKeyFrame.EasingFunction>
        				<CircleEase EasingMode="EaseInOut"/>
        			</EasingDoubleKeyFrame.EasingFunction>
        		</EasingDoubleKeyFrame>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard> 

    </phone:PhoneApplicationPage.Resources>

    <toolkit:TransitionService.NavigationInTransition>
        <toolkit:NavigationInTransition>
            <toolkit:NavigationInTransition.Backward>
                <toolkit:TurnstileFeatherTransition Mode="BackwardIn" />
            </toolkit:NavigationInTransition.Backward>
            <toolkit:NavigationInTransition.Forward>
                <toolkit:TurnstileFeatherTransition Mode="ForwardIn" />
            </toolkit:NavigationInTransition.Forward>
        </toolkit:NavigationInTransition>
    </toolkit:TransitionService.NavigationInTransition>
    <toolkit:TransitionService.NavigationOutTransition>
        <toolkit:NavigationOutTransition>
            <toolkit:NavigationOutTransition.Backward>
                <toolkit:TurnstileFeatherTransition Mode="BackwardOut" />
            </toolkit:NavigationOutTransition.Backward>
            <toolkit:NavigationOutTransition.Forward>
                <toolkit:TurnstileFeatherTransition Mode="ForwardOut" />
            </toolkit:NavigationOutTransition.Forward>
        </toolkit:NavigationOutTransition>
    </toolkit:TransitionService.NavigationOutTransition>

    <!--LayoutRoot ist das Stammraster, in dem alle anderen Seiteninhalte platziert werden-->
    <Grid x:Name="LayoutRoot" Background="{StaticResource ThemeBackgroundDark}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="100"/>
            <RowDefinition Height="72"/>
        </Grid.RowDefinitions>
        
        <Grid x:Name="TitlePanel" Grid.Row="0" Margin="0,-1,0,28" toolkit:TurnstileFeatherEffect.FeatheringIndex="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="112" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" Grid.Row="0" Fill="{StaticResource ThemeForegroundLight}" Height="50" VerticalAlignment="Top" />
            <Border Grid.Column="0" Grid.RowSpan="2" Background="{StaticResource ThemeBackgroundMedium}" HorizontalAlignment="Right" Margin="6">
                <Image Source="Assets/ApplicationIcon.png" Height="62" Width="62"/>
            </Border>
            <TextBlock Grid.Column="1" Text="{Binding Path=LocalizedResources.ApplicationTitle, Source={StaticResource LocalizedStrings}}" Style="{StaticResource ThemeTextTitle1Style}" VerticalAlignment="Top" Margin="12,2"/>
        </Grid>

        <!--ContentPanel - zusätzliche Inhalte hier platzieren-->
        <Grid x:Name="ContentPanel" Grid.Row="1" Margin="12,0,12,0">
        	<Grid.Projection>
        		<PlaneProjection/>
        	</Grid.Projection>
            <Grid x:Name="InactivePanel" Visibility="Visible">
                <Grid.Projection>
                    <PlaneProjection/>
                </Grid.Projection>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="52" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" VerticalAlignment="Bottom" toolkit:TurnstileFeatherEffect.FeatheringIndex="1">
                    <TextBlock Grid.Row="0" Text="{Binding AlarmPreviewTime, Converter={StaticResource DateToTimeConverter}, ConverterParameter=t}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0" FontSize="22"/>
                    <c4f:TimeSpanPicker x:Name="CustomNapTimePicker" Value="0:20:00" FontSize="108" HorizontalAlignment="Center"
                                    Template="{StaticResource TimeSpanCustomStyle}" Min="0:01:00" IsHitTestVisible="False" />
                </Grid>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top"  toolkit:TurnstileFeatherEffect.FeatheringIndex="2" >
                    <RepeatButton x:Name="ButtonMinus1" Width="112" Height="112" Margin="12,0,54,0" Style="{StaticResource RoundButton}" Tag="-1" Click="ChangeAlarmTimeClick" Interval="1">
                        <TextBlock Text="-" FontSize="64" Margin="0,-16,2,0" />
                    </RepeatButton>
                    <RepeatButton x:Name="ButtonPlus1" Width="112" Height="112" Margin="54,0,10,0" Style="{StaticResource RoundButton}" Tag="1" Click="ChangeAlarmTimeClick" Interval="1">
                        <TextBlock Text="+" FontSize="64" Margin="0,-16,2,0" />
                    </RepeatButton>
                </StackPanel>
                <Button Grid.Row="3" Click="StartAlarmClick"  toolkit:TurnstileFeatherEffect.FeatheringIndex="4"
                            Width="176" Height="176" Style="{StaticResource RoundButton}">
                    <Path Data="M 10,0 L 10,60 L60,30 Z" Fill="{StaticResource ThemeForegroundLight}" Width="60" Height="60" />
                </Button>
            </Grid>
            <Grid x:Name="ActivePanel" Visibility="Visible">
            	<Grid.Projection>
            		<PlaneProjection/>
            	</Grid.Projection>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="52" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <Image x:Name="ClockImage" Grid.Row="0" Grid.RowSpan="3" Source="Assets/Images/alarm.png" Height="200" Width="200"  toolkit:TurnstileFeatherEffect.FeatheringIndex="1"
                       Visibility="{Binding IsAlarmRinging, Converter={StaticResource BoolToVisibilityConverter}}" />
                <TextBlock Grid.Row="0" Text="{Binding TimeToAlarm, Converter={StaticResource TimeSpanConverter}}"  toolkit:TurnstileFeatherEffect.FeatheringIndex="1"
                           VerticalAlignment="Bottom" Margin="0,0,0,18" HorizontalAlignment="Center" FontSize="108"
                           Visibility="{Binding IsAlarmNotRinging, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top"  toolkit:TurnstileFeatherEffect.FeatheringIndex="2"
                            Visibility="{Binding IsAlarmNotRinging, Converter={StaticResource BoolToVisibilityConverter}}">
                    <RepeatButton Command="{Binding AntiSnoozeCommand}" CommandParameter="1" Interval="1"
                            Width="112" Height="112" Style="{StaticResource RoundButton}" Margin="12,0,54,0">
                        <TextBlock Text="-" FontSize="64" Margin="0,-16,2,0" />
                    </RepeatButton>
                    <RepeatButton Command="{Binding SnoozeCommand}" CommandParameter="1" Interval="1"
                            Width="112" Height="112" Style="{StaticResource RoundButton}" Margin="54,0,12,0">
                        <TextBlock Text="+" FontSize="64" Margin="0,-16,2,0" />
                    </RepeatButton>
                </StackPanel>
                <Grid Grid.Row="2" Visibility="{Binding IsAlarmNotRinging, Converter={StaticResource BoolToVisibilityConverter}}"  toolkit:TurnstileFeatherEffect.FeatheringIndex="4">
                    <ProgressBar Height="50" Value="{Binding Progress}" VerticalAlignment="Center" Foreground="{StaticResource ThemeForegroundDark}" Background="{StaticResource ThemeBackgroundMedium}"/>
                    <TextBlock Text="{Binding AlarmTime, Converter={StaticResource DateToTimeConverter}, ConverterParameter=t}"
                           HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource ThemeTextNormalStyle}" Margin="12,34,12,0" />
                    <TextBlock Text="{Binding AlarmSetTime, Converter={StaticResource DateToTimeConverter}, ConverterParameter=t}"
                           HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource ThemeTextNormalStyle}" Margin="12,34,12,0" />
                </Grid>
                <Button Grid.Row="3" Command="{Binding StopCommand}"  toolkit:TurnstileFeatherEffect.FeatheringIndex="4"
                        Width="176" Height="176" Style="{StaticResource RoundButton}" Click="StopButtonClick">
                    <Rectangle Width="42" Height="42" Fill="{StaticResource ThemeForegroundLight}" />
                </Button>
            </Grid>
        </Grid>

        <!-- Feedback dialog -->
        <lc:LocalizedFeedbackDialogControl Grid.RowSpan="3" />
    </Grid>

</phone:PhoneApplicationPage>