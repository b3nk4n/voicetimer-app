<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>voiceTIMER</value>
    <comment>General</comment>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>about</value>
    <comment>AboutPage</comment>
  </data>
  <data name="ApplicationAuthor" xml:space="preserve">
    <value>by Benjamin Sautermeister</value>
    <comment>AboutPage</comment>
  </data>
  <data name="ApplicationDescription" xml:space="preserve">
    <value>The quick and easy timer app for Windows Phone with voice commands.</value>
    <comment>AboutPage</comment>
  </data>
  <data name="MoreApps" xml:space="preserve">
    <value>more apps</value>
    <comment>AboutPage</comment>
  </data>
  <data name="PrivacyInfo" xml:space="preserve">
    <value>privacy info</value>
    <comment>About Page</comment>
  </data>
  <data name="RateAndReview" xml:space="preserve">
    <value>rate and review</value>
    <comment>AboutPage</comment>
  </data>
  <data name="SupportAndFeedback" xml:space="preserve">
    <value>support and feedback</value>
    <comment>About Page</comment>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>settings</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="VoiceCommands" xml:space="preserve">
    <value>Voice commands</value>
    <comment>Settings Page</comment>
  </data>
  <data name="VoiceLanguage" xml:space="preserve">
    <value>Language</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="VoiceStatus" xml:space="preserve">
    <value>Status</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="VoiceSupported" xml:space="preserve">
    <value>supported</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="VoiceUnsupported" xml:space="preserve">
    <value>not supported</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="VoiceUnsupportedMessage" xml:space="preserve">
    <value>Your installed language package is not supported  in the current version of this application. Supported languages for voice commands are English (en-US, en-GB) and German (de-DE). Please check your phone settings.</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="VibrationEnabled" xml:space="preserve">
    <value>Vibration</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="Alarm" xml:space="preserve">
    <value>Alarm sound</value>
    <comment>SettingsPage</comment>
  </data>
  <data name="ApplicationVersion" xml:space="preserve">
    <value>1.0</value>
    <comment>General</comment>
  </data>
  <data name="FeedbackBodyText" xml:space="preserve">
    <value>[Your feedback here]


---------------------------------
Device Name: {0}
Device Manufacturer: {1}
Device Firmware Version: {2}
Device Hardware Version: {3}
Application Version: {4}
---------------------------------</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="FeedbackEmail" xml:space="preserve">
    <value>apps@bsautermeister.de</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="FeedbackMessageText" xml:space="preserve">
    <value>Sorry to hear you didn't want to rate voiceTIMER.

Tell us about your experience or suggest how we can make it even better.</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="FeedbackNoText" xml:space="preserve">
    <value>no thanks</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="FeedbackSubject" xml:space="preserve">
    <value>voiceTIMER Customer Feedback </value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="FeedbackTitleText" xml:space="preserve">
    <value>Can we make it better?</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="FeedbackYesText" xml:space="preserve">
    <value>give feedback</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="RatingMessage10Text" xml:space="preserve">
    <value>You look to be getting a lot of use out of our application!

Why not give us a 5 star rating to show your appreciation?</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="RatingMessage5Text" xml:space="preserve">
    <value>We'd love you to rate our app 5 stars.

Showing us some love on the store helps us to continue to work on the app and make things even better!</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="RatingNoText" xml:space="preserve">
    <value>no thanks</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="RatingTitleText" xml:space="preserve">
    <value>Enjoying voiceTIMER?</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="RatingYesText" xml:space="preserve">
    <value>rate 5 stars</value>
    <comment>FeedbackDialogControl</comment>
  </data>
  <data name="AppBarInfo" xml:space="preserve">
    <value>info</value>
    <comment>AppBar</comment>
  </data>
  <data name="AppBarOffline" xml:space="preserve">
    <value>disable connectivity</value>
    <comment>AppBar</comment>
  </data>
  <data name="Commands1Message" xml:space="preserve">
    <value>Press and hold the Windows-Button of you phone until the voice input dialog pops up.</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands1Title" xml:space="preserve">
    <value>1. Activate voice input</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Bullet1" xml:space="preserve">
    <value>- " ...for 1 hour and 20 minutes. "</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Bullet2" xml:space="preserve">
    <value>- " ...cancel nap. "</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Bullet3" xml:space="preserve">
    <value>- " ...when is the timer set for? "</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Bullet4" xml:space="preserve">
    <value>- " ...what is the remaining time? "</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Bullet5" xml:space="preserve">
    <value>- " ...plus 5 minutes. "</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Message1" xml:space="preserve">
    <value>Say</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Message2" xml:space="preserve">
    <value> "Voice Timer..."  </value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Message3" xml:space="preserve">
    <value>followed by your request. Some examples:</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands2Title" xml:space="preserve">
    <value>2. Speak</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands3Message" xml:space="preserve">
    <value>VoiceTimer takes care of the rest...</value>
    <comment>InfoPage</comment>
  </data>
  <data name="Commands3Title" xml:space="preserve">
    <value>3. Do your stuff</value>
    <comment>InfoPage</comment>
  </data>
  <data name="CommandsHeader" xml:space="preserve">
    <value>commands</value>
    <comment>InfoPage</comment>
  </data>
  <data name="CommandsIntro" xml:space="preserve">
    <value>This application supports Windows Phone voice commands. Follow these simple steps to set the timer even faster and easier:</value>
    <comment>InfoPage</comment>
  </data>
  <data name="SpeakAlarmAlreadySet" xml:space="preserve">
    <value>Timer is already set.</value>
    <comment>Voice</comment>
  </data>
  <data name="SpeakAlarmSetFor" xml:space="preserve">
    <value>Timer is set for {0}.</value>
    <comment>Voice</comment>
  </data>
  <data name="SpeakNoAlarmSet" xml:space="preserve">
    <value>Timer was not set.</value>
    <comment>Voice</comment>
  </data>
  <data name="SpeakStartTimer" xml:space="preserve">
    <value>Timer is set for {0} minutes.</value>
    <comment>Voice</comment>
  </data>
  <data name="SpeakStopTimer" xml:space="preserve">
    <value>Timer is now off. </value>
    <comment>Voice</comment>
  </data>
  <data name="SpeakTimeLeft" xml:space="preserve">
    <value>You have {0} minutes left.</value>
    <comment>Voice</comment>
  </data>
  <data name="SpeakTimeShifted" xml:space="preserve">
    <value>Now you have about {0} minutes left.</value>
    <comment>Voice</comment>
  </data>
  <data name="AlertDialogMessage" xml:space="preserve">
    <value>Timer exceeded!</value>
    <comment>AlertDialog</comment>
  </data>
  <data name="SpeakTimeShiftedNoTimeLeft" xml:space="preserve">
    <value>Time has now exceeded.</value>
    <comment>Voice</comment>
  </data>
</root>